import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, _ as create_slot, D as validate_store, E as component_subscribe, F as Cookie, v as validate_slots, I as goto, e as element, c as create_component, a as space, t as text, b as claim_element, h as children, k as claim_component, g as claim_space, j as claim_text, f as detach_dev, l as attr_dev, m as add_location, p as insert_dev, r as mount_component, o as append_dev, K as set_data_dev, u as transition_in, w as transition_out, x as destroy_component, n as set_style, P as listen_dev, Q as group_outros, U as check_outros, $ as get_slot_context, a0 as get_slot_changes } from './client.71a9cd32.js';
import { U as UserDropdown, W as WordAvatar } from './UserDropdown.3644fef4.js';
import { c as current } from './projects.77be37ef.js';

/* src/components/Layout/Headers/ProjectHeader.svelte generated by Svelte v3.22.2 */

const file = "src/components/Layout/Headers/ProjectHeader.svelte";

// (25:4) { #if $current.loaded && logotype }
function create_if_block_1(ctx) {
	let div1;
	let t0;
	let div0;
	let h1;
	let t1_value = /*$current*/ ctx[3].branding.name.slice(0, 10) + "";
	let t1;

	let t2_value = (/*$current*/ ctx[3].branding.name.split("").length > 10
	? "..."
	: "") + "";

	let t2;
	let t3;
	let p;
	let t4;
	let current;

	const wordavatar = new WordAvatar({
			props: { word: /*$current*/ ctx[3].branding.name },
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = element("div");
			create_component(wordavatar.$$.fragment);
			t0 = space();
			div0 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = text(t2_value);
			t3 = space();
			p = element("p");
			t4 = text("Текущий проект");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(wordavatar.$$.fragment, div1_nodes);
			t0 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			t2 = claim_text(h1_nodes, t2_value);
			h1_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			p = claim_element(div0_nodes, "P", { class: true });
			var p_nodes = children(p);
			t4 = claim_text(p_nodes, "Текущий проект");
			p_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "text-base font-semibold");
			add_location(h1, file, 31, 10, 963);
			attr_dev(p, "class", "text-xs text-gray-700");
			add_location(p, file, 32, 10, 1112);
			attr_dev(div0, "class", "text-left ml-3");
			add_location(div0, file, 30, 8, 923);
			attr_dev(div1, "class", "px-4 py-2 mx-2 hover:bg-gray-200 flex rounded-lg items-center");
			add_location(div1, file, 25, 6, 736);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			mount_component(wordavatar, div1, null);
			append_dev(div1, t0);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t1);
			append_dev(h1, t2);
			append_dev(div0, t3);
			append_dev(div0, p);
			append_dev(p, t4);
			current = true;
		},
		p: function update(ctx, dirty) {
			const wordavatar_changes = {};
			if (dirty & /*$current*/ 8) wordavatar_changes.word = /*$current*/ ctx[3].branding.name;
			wordavatar.$set(wordavatar_changes);
			if ((!current || dirty & /*$current*/ 8) && t1_value !== (t1_value = /*$current*/ ctx[3].branding.name.slice(0, 10) + "")) set_data_dev(t1, t1_value);

			if ((!current || dirty & /*$current*/ 8) && t2_value !== (t2_value = (/*$current*/ ctx[3].branding.name.split("").length > 10
			? "..."
			: "") + "")) set_data_dev(t2, t2_value);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(wordavatar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(wordavatar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			destroy_component(wordavatar);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(25:4) { #if $current.loaded && logotype }",
		ctx
	});

	return block;
}

// (39:4) { #if divider }
function create_if_block(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, style: true });
			children(div).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "rounded-full");
			set_style(div, "width", "2px");
			set_style(div, "height", "2.4em");
			set_style(div, "background-color", "#000");
			add_location(div, file, 39, 6, 1259);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(39:4) { #if divider }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div5;
	let div0;
	let t0;
	let t1;
	let t2;
	let div4;
	let div3;
	let div1;
	let img0;
	let img0_src_value;
	let t3;
	let div2;
	let img1;
	let img1_src_value;
	let t4;
	let current;
	let dispose;
	let if_block0 = /*$current*/ ctx[3].loaded && /*logotype*/ ctx[0] && create_if_block_1(ctx);
	let if_block1 = /*divider*/ ctx[1] && create_if_block(ctx);
	const default_slot_template = /*$$slots*/ ctx[6].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
	const userdropdown = new UserDropdown({ $$inline: true });

	const block = {
		c: function create() {
			div5 = element("div");
			div0 = element("div");
			if (if_block0) if_block0.c();
			t0 = space();
			if (if_block1) if_block1.c();
			t1 = space();
			if (default_slot) default_slot.c();
			t2 = space();
			div4 = element("div");
			div3 = element("div");
			div1 = element("div");
			img0 = element("img");
			t3 = space();
			div2 = element("div");
			img1 = element("img");
			t4 = space();
			create_component(userdropdown.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (if_block0) if_block0.l(div0_nodes);
			t0 = claim_space(div0_nodes);
			if (if_block1) if_block1.l(div0_nodes);
			t1 = claim_space(div0_nodes);
			if (default_slot) default_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { style: true, class: true });
			var div1_nodes = children(div1);
			img0 = claim_element(div1_nodes, "IMG", { src: true, alt: true });
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { style: true, class: true });
			var div2_nodes = children(div2);
			img1 = claim_element(div2_nodes, "IMG", { src: true, alt: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			claim_component(userdropdown.$$.fragment, div4_nodes);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "px-6 flex items-center");
			add_location(div0, file, 23, 2, 651);
			if (img0.src !== (img0_src_value = "./icons/layers.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "Project Chooser Icon");
			add_location(img0, file, 57, 8, 1837);
			set_style(div1, "cursor", "pointer");
			attr_dev(div1, "class", "px-4 py-4 mx-1 hover:bg-gray-200 rounded-lg");
			add_location(div1, file, 49, 6, 1537);
			if (img1.src !== (img1_src_value = "./icons/settings.svg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "Project Settings Icon");
			add_location(img1, file, 63, 8, 2066);
			set_style(div2, "cursor", "pointer");
			attr_dev(div2, "class", "px-4 py-4 mx-1 hover:bg-gray-200 rounded-lg");
			add_location(div2, file, 61, 6, 1951);
			attr_dev(div3, "class", "flex mr-4");
			add_location(div3, file, 47, 4, 1469);
			attr_dev(div4, "class", "flex items-center");
			add_location(div4, file, 46, 2, 1432);
			attr_dev(div5, "class", "bg-white w-full absolute inset-x-0 top-0 flex justify-between items-center py-2");
			add_location(div5, file, 21, 0, 527);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div5, anchor);
			append_dev(div5, div0);
			if (if_block0) if_block0.m(div0, null);
			append_dev(div0, t0);
			if (if_block1) if_block1.m(div0, null);
			append_dev(div0, t1);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			append_dev(div5, t2);
			append_dev(div5, div4);
			append_dev(div4, div3);
			append_dev(div3, div1);
			append_dev(div1, img0);
			append_dev(div3, t3);
			append_dev(div3, div2);
			append_dev(div2, img1);
			append_dev(div4, t4);
			mount_component(userdropdown, div4, null);
			current = true;
			if (remount) dispose();
			dispose = listen_dev(div1, "click", /*click_handler*/ ctx[7], false, false, false);
		},
		p: function update(ctx, [dirty]) {
			if (/*$current*/ ctx[3].loaded && /*logotype*/ ctx[0]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*$current, logotype*/ 9) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div0, t0);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (/*divider*/ ctx[1]) {
				if (if_block1) ; else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div0, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 32) {
					default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[5], null), get_slot_changes(default_slot_template, /*$$scope*/ ctx[5], dirty, null));
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(default_slot, local);
			transition_in(userdropdown.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(default_slot, local);
			transition_out(userdropdown.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (default_slot) default_slot.d(detaching);
			destroy_component(userdropdown);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $current;
	validate_store(current, "current");
	component_subscribe($$self, current, $$value => $$invalidate(3, $current = $$value));
	const cookies = Cookie();
	let { logotype = true } = $$props;
	let { divider = true } = $$props;
	let { returnURL = null } = $$props;
	const writable_props = ["logotype", "divider", "returnURL"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProjectHeader> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ProjectHeader", $$slots, ['default']);

	const click_handler = e => {
		if (returnURL == null) {
			goto("/panel/projects");
		} else {
			goto(`/panel/projects?return=${returnURL}`);
		}

		
	};

	$$self.$set = $$props => {
		if ("logotype" in $$props) $$invalidate(0, logotype = $$props.logotype);
		if ("divider" in $$props) $$invalidate(1, divider = $$props.divider);
		if ("returnURL" in $$props) $$invalidate(2, returnURL = $$props.returnURL);
		if ("$$scope" in $$props) $$invalidate(5, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		goto,
		Cookie,
		WordAvatar,
		UserDropdown,
		current,
		cookies,
		logotype,
		divider,
		returnURL,
		$current
	});

	$$self.$inject_state = $$props => {
		if ("logotype" in $$props) $$invalidate(0, logotype = $$props.logotype);
		if ("divider" in $$props) $$invalidate(1, divider = $$props.divider);
		if ("returnURL" in $$props) $$invalidate(2, returnURL = $$props.returnURL);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		logotype,
		divider,
		returnURL,
		$current,
		cookies,
		$$scope,
		$$slots,
		click_handler
	];
}

class ProjectHeader extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { logotype: 0, divider: 1, returnURL: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProjectHeader",
			options,
			id: create_fragment.name
		});
	}

	get logotype() {
		throw new Error("<ProjectHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set logotype(value) {
		throw new Error("<ProjectHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get divider() {
		throw new Error("<ProjectHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set divider(value) {
		throw new Error("<ProjectHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get returnURL() {
		throw new Error("<ProjectHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set returnURL(value) {
		throw new Error("<ProjectHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { ProjectHeader as H };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvamVjdEhlYWRlci5lZDgxMTRhNC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTGF5b3V0L0hlYWRlcnMvUHJvamVjdEhlYWRlci5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cclxuICAvLyBpbXBvcnRcclxuICBpbXBvcnQgeyBnb3RvIH0gZnJvbSBcIkBzYXBwZXIvYXBwXCI7XHJcbiAgaW1wb3J0IENvb2tpZSBmcm9tIFwiY29va2llLXVuaXZlcnNhbFwiO1xyXG5cclxuICAvLyBJbXBvcnRpbmcgY29tcG9uZW50c1xyXG4gIGltcG9ydCBXb3JkQXZhdGFyIGZyb20gXCIuLi8uLi9BdmF0YXIvV29yZEF2YXRhci5zdmVsdGVcIjtcclxuICBpbXBvcnQgVXNlckRyb3Bkb3duIGZyb20gXCIuLi8uLi9IZWFkZXIvVXNlckRyb3Bkb3duLnN2ZWx0ZVwiO1xyXG5cclxuICAvLyBJbXBvcnRpbmcgc3RvcmVzLi4uXHJcbiAgaW1wb3J0IHsgY3VycmVudCB9IGZyb20gXCIuLi8uLi8uLi9jb25maWcvc3RvcmVzL3Byb2plY3RzLmpzXCI7XHJcblxyXG4gIC8vIENvb2tpZSBtYW5hZ2VyXHJcbiAgY29uc3QgY29va2llcyA9IENvb2tpZSgpO1xyXG5cclxuICBleHBvcnQgbGV0IGxvZ290eXBlID0gdHJ1ZTtcclxuICBleHBvcnQgbGV0IGRpdmlkZXIgPSB0cnVlO1xyXG4gIGV4cG9ydCBsZXQgcmV0dXJuVVJMID0gbnVsbDtcclxuPC9zY3JpcHQ+XHJcblxyXG48IS0tIEhlYWRlciAtLT5cclxuPGRpdiBjbGFzcz1cImJnLXdoaXRlIHctZnVsbCBhYnNvbHV0ZSBpbnNldC14LTAgdG9wLTAgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHB5LTJcIj5cclxuICA8IS0tIFNlcnZpY2VzIHBhbmVsIC0tPlxyXG4gIDxkaXYgY2xhc3M9XCJweC02IGZsZXggaXRlbXMtY2VudGVyXCI+XHJcbiAgICB7ICNpZiAkY3VycmVudC5sb2FkZWQgJiYgbG9nb3R5cGUgfVxyXG4gICAgICA8ZGl2IGNsYXNzPVwicHgtNCBweS0yIG14LTIgaG92ZXI6YmctZ3JheS0yMDAgZmxleCByb3VuZGVkLWxnIGl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgIDwhLS0gSWNvbiAtLT5cclxuICAgICAgICA8V29yZEF2YXRhciB3b3JkPXskY3VycmVudC5icmFuZGluZy5uYW1lfSAvPlxyXG5cclxuICAgICAgICA8IS0tIFRleHQgLS0+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtbGVmdCBtbC0zXCI+XHJcbiAgICAgICAgICA8aDEgY2xhc3M9XCJ0ZXh0LWJhc2UgZm9udC1zZW1pYm9sZFwiPnskY3VycmVudC5icmFuZGluZy5uYW1lLnNsaWNlKDAsIDEwKX17JGN1cnJlbnQuYnJhbmRpbmcubmFtZS5zcGxpdCgnJykubGVuZ3RoID4gMTAgPyBcIi4uLlwiIDogXCJcIn08L2gxPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXhzIHRleHQtZ3JheS03MDBcIj7QotC10LrRg9GJ0LjQuSDQv9GA0L7QtdC60YI8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgeyAvaWYgfVxyXG5cclxuICAgIDwhLS0gRGl2aWRlciAtLT5cclxuICAgIHsgI2lmIGRpdmlkZXIgfVxyXG4gICAgICA8ZGl2IGNsYXNzPVwicm91bmRlZC1mdWxsXCIgc3R5bGU9XCJ3aWR0aDogMnB4OyBoZWlnaHQ6IDIuNGVtOyBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1wiPjwvZGl2PlxyXG4gICAgeyAvaWYgfVxyXG5cclxuICAgIDxzbG90Pjwvc2xvdD5cclxuICA8L2Rpdj5cclxuXHJcbiAgPCEtLSBVc2VyIGRyb3Bkb3duIHBhbmVsIC0tPlxyXG4gIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImZsZXggbXItNFwiPlxyXG4gICAgICA8IS0tIENob29zZSBvdGhlciBwcm9qZWN0IC0tPlxyXG4gICAgICA8ZGl2IG9uOmNsaWNrPXsoZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXR1cm5VUkwgPT0gbnVsbCkge1xyXG4gICAgICAgICAgZ290bygnL3BhbmVsL3Byb2plY3RzJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGdvdG8oYC9wYW5lbC9wcm9qZWN0cz9yZXR1cm49JHtyZXR1cm5VUkx9YCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgfX0gc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXI7XCIgY2xhc3M9XCJweC00IHB5LTQgbXgtMSBob3ZlcjpiZy1ncmF5LTIwMCByb3VuZGVkLWxnXCI+XHJcbiAgICAgICAgPCEtLSBJY29uIC0tPlxyXG4gICAgICAgIDxpbWcgc3JjPVwiLi9pY29ucy9sYXllcnMuc3ZnXCIgYWx0PVwiUHJvamVjdCBDaG9vc2VyIEljb25cIj5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8IS0tIFByb2plY3Qgc2V0dGluZ3MgLS0+XHJcbiAgICAgIDxkaXYgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXI7XCIgY2xhc3M9XCJweC00IHB5LTQgbXgtMSBob3ZlcjpiZy1ncmF5LTIwMCByb3VuZGVkLWxnXCI+XHJcbiAgICAgICAgPCEtLSBJY29uIC0tPlxyXG4gICAgICAgIDxpbWcgc3JjPVwiLi9pY29ucy9zZXR0aW5ncy5zdmdcIiBhbHQ9XCJQcm9qZWN0IFNldHRpbmdzIEljb25cIj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8IS0tIFVzZXIgZHJvcGRvd24gLS0+XHJcbiAgICA8VXNlckRyb3Bkb3duIC8+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs2QkErQitDLEdBQVEsSUFBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRTs7OzhCQUFHLEdBQVEsSUFBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsTUFBTSxHQUFHLEVBQUU7R0FBRyxLQUFLO0dBQUcsRUFBRTs7Ozs7Ozs7OytCQUpuSCxHQUFRLElBQUMsUUFBUSxDQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0VBQXRCLEdBQVEsSUFBQyxRQUFRLENBQUMsSUFBSTs7cUZBSUQsR0FBUSxJQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFOztzRkFBRyxHQUFRLElBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLE1BQU0sR0FBRyxFQUFFO0tBQUcsS0FBSztLQUFHLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhCQVBuSSxHQUFRLElBQUMsTUFBTSxpQkFBSSxHQUFROzZCQWMzQixHQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFkUCxHQUFRLElBQUMsTUFBTSxpQkFBSSxHQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQkFjM0IsR0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQXpCVCxPQUFPLEdBQUcsTUFBTTtPQUVYLFFBQVEsR0FBRyxJQUFJO09BQ2YsT0FBTyxHQUFHLElBQUk7T0FDZCxTQUFTLEdBQUcsSUFBSTs7Ozs7Ozs7Ozt1QkFnQ1AsQ0FBQztNQUNYLFNBQVMsSUFBSSxJQUFJO0dBQ25CLElBQUksQ0FBQyxpQkFBaUI7O0dBRXRCLElBQUksMkJBQTJCLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
