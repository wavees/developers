import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, C as Spinner, D as validate_store, E as component_subscribe, F as Cookie, G as stores$1, H as onMount, v as validate_slots, I as goto, J as axios, e as element, t as text, a as space, c as create_component, b as claim_element, h as children, j as claim_text, f as detach_dev, g as claim_space, k as claim_component, n as set_style, l as attr_dev, m as add_location, p as insert_dev, o as append_dev, r as mount_component, y as noop, u as transition_in, w as transition_out, x as destroy_component } from './client.71a9cd32.js';
import { a as api } from './global.086fc0a6.js';

/* src/routes/login/[token].svelte generated by Svelte v3.22.2 */
const file = "src/routes/login/[token].svelte";

function create_fragment(ctx) {
	let div3;
	let div2;
	let div1;
	let div0;
	let h1;
	let t0;
	let t1;
	let current;
	const spinner = new Spinner({ props: { size: "25" }, $$inline: true });

	const block = {
		c: function create() {
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text("wavees");
			t1 = space();
			create_component(spinner.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { style: true, class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { style: true, class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { style: true, class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "wavees");
			h1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div1_nodes);
			claim_component(spinner.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(h1, "font-family", "Junegull");
			attr_dev(h1, "class", "text-2xl text-bold");
			add_location(h1, file, 63, 4, 1718);
			attr_dev(div0, "class", "flex mb-6 items-center");
			add_location(div0, file, 62, 3, 1677);
			attr_dev(div1, "class", "flex flex-col justify-center items-center");
			add_location(div1, file, 61, 2, 1618);
			set_style(div2, "height", "100vh");
			attr_dev(div2, "class", "w-full flex justify-center items-center");
			add_location(div2, file, 59, 1, 1519);
			set_style(div3, "min-height", "100vh");
			attr_dev(div3, "class", "w-full h-full flex flex-col justify-center items-center");
			add_location(div3, file, 57, 0, 1402);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div2);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div1, t1);
			mount_component(spinner, div1, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(spinner.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(spinner.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
			destroy_component(spinner);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $page;
	let $api;
	validate_store(api, "api");
	component_subscribe($$self, api, $$value => $$invalidate(2, $api = $$value));
	const cookies = Cookie();

	// Page store
	const { page } = stores$1();

	validate_store(page, "page");
	component_subscribe($$self, page, value => $$invalidate(1, $page = value));

	// onMount function.
	// Here we'll check if this token
	// even exists or no.
	onMount(() => {
		// Firstly, let's check if this
		// token exists or not.
		const token = $page.params.token;

		axios.get(`${$api.url}/${$api.version}/account/${token}`).then(response => {
			// Let's now work with this
			// response...
			let data = response.data;

			if (data.type == "user" || data.type == "session") {
				// Okay, so now we need to create
				// token cookie and redirect user to main page...
				cookies.set("_account_token", token, { path: "/" });

				window.location.href = "/";
			} else {
				// This token doesn't exists.
				cookies.remove("_account_token");

				window.location.href = "/";
			}
		}).catch(error => {
			cookies.remove("_account_token");
			window.location.href = "/";
		});
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Btokenu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Btokenu5D", $$slots, []);

	$$self.$capture_state = () => ({
		stores: stores$1,
		goto,
		axios,
		api,
		Cookie,
		cookies,
		page,
		Spinner,
		onMount,
		$page,
		$api
	});

	return [page];
}

class U5Btokenu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Btokenu5D",
			options,
			id: create_fragment.name
		});
	}
}

export default U5Btokenu5D;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3Rva2VuXS4yNmI5NDQ1MS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9sb2dpbi9bdG9rZW5dLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAvLyBMZXQncyBub3cgaW1wb3J0IHNvbWUgbW9kdWxlc1xuICAvLyBhbmQgc3RvcmVzLlxuICBpbXBvcnQgeyBzdG9yZXMsIGdvdG8gfSBmcm9tIFwiQHNhcHBlci9hcHBcIlxuICBpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5cbiAgaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4uLy4uL2NvbmZpZy9zdG9yZXMvZ2xvYmFsXCI7XG5cbiAgaW1wb3J0IENvb2tpZSBmcm9tIFwiY29va2llLXVuaXZlcnNhbFwiO1xuXG4gIC8vIENvb2tpZSBtYW5hZ2VyXG4gIGNvbnN0IGNvb2tpZXMgPSBDb29raWUoKTtcblxuICAvLyBQYWdlIHN0b3JlXG4gIGNvbnN0IHsgcGFnZSB9ID0gc3RvcmVzKCk7XG5cbiAgLy8gSW1wb3J0aW5nIHNvbWUgY29tcG9uZW50cy5cblx0aW1wb3J0IFNwaW5uZXIgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTG9hZGluZy9TcGlubmVyLnN2ZWx0ZVwiO1xuXG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCJcblxuICAvLyBvbk1vdW50IGZ1bmN0aW9uLlxuICAvLyBIZXJlIHdlJ2xsIGNoZWNrIGlmIHRoaXMgdG9rZW5cbiAgLy8gZXZlbiBleGlzdHMgb3Igbm8uXG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIC8vIEZpcnN0bHksIGxldCdzIGNoZWNrIGlmIHRoaXNcbiAgICAvLyB0b2tlbiBleGlzdHMgb3Igbm90LlxuICAgIGNvbnN0IHRva2VuID0gJHBhZ2UucGFyYW1zLnRva2VuO1xuXG4gICAgYXhpb3MuZ2V0KGAkeyRhcGkudXJsfS8keyRhcGkudmVyc2lvbn0vYWNjb3VudC8ke3Rva2VufWApXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAvLyBMZXQncyBub3cgd29yayB3aXRoIHRoaXNcbiAgICAgIC8vIHJlc3BvbnNlLi4uXG4gICAgICBsZXQgZGF0YSA9IHJlc3BvbnNlLmRhdGE7XG5cbiAgICAgIGlmIChkYXRhLnR5cGUgPT0gXCJ1c2VyXCIgfHwgZGF0YS50eXBlID09IFwic2Vzc2lvblwiKSB7XG4gICAgICAgIC8vIE9rYXksIHNvIG5vdyB3ZSBuZWVkIHRvIGNyZWF0ZVxuICAgICAgICAvLyB0b2tlbiBjb29raWUgYW5kIHJlZGlyZWN0IHVzZXIgdG8gbWFpbiBwYWdlLi4uXG4gICAgICAgIGNvb2tpZXMuc2V0KCdfYWNjb3VudF90b2tlbicsIHRva2VuLCB7XG4gICAgICAgICAgcGF0aDogJy8nXG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL1wiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVGhpcyB0b2tlbiBkb2Vzbid0IGV4aXN0cy5cbiAgICAgICAgY29va2llcy5yZW1vdmUoJ19hY2NvdW50X3Rva2VuJyk7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCI7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb29raWVzLnJlbW92ZSgnX2FjY291bnRfdG9rZW4nKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCI7XG4gICAgfSk7XG4gIH0pO1xuPC9zY3JpcHQ+XG5cbjwhLS0gXG4gIE1haW4gTGF5b3V0XG4gLS0+XG48ZGl2IHN0eWxlPVwibWluLWhlaWdodDogMTAwdmg7XCIgY2xhc3M9XCJ3LWZ1bGwgaC1mdWxsIGZsZXggZmxleC1jb2wganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyXCI+XG4gIDwhLS0gU3Bpbm5lciAtLT5cblx0PGRpdiBzdHlsZT1cImhlaWdodDogMTAwdmg7XCIgY2xhc3M9XCJ3LWZ1bGwgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXJcIj5cblx0XHQ8IS0tIEJyYW5kaW5nIC0tPlxuXHRcdDxkaXYgY2xhc3M9XCJmbGV4IGZsZXgtY29sIGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlclwiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImZsZXggbWItNiBpdGVtcy1jZW50ZXJcIj5cblx0XHRcdFx0PGgxIHN0eWxlPVwiZm9udC1mYW1pbHk6IEp1bmVndWxsXCIgY2xhc3M9XCJ0ZXh0LTJ4bCB0ZXh0LWJvbGRcIj53YXZlZXM8L2gxPlxuXHRcdFx0PC9kaXY+XG5cblx0XHRcdDxTcGlubmVyIHNpemU9XCIyNVwiIC8+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuPC9kaXY+Il0sIm5hbWVzIjpbInN0b3JlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BV1EsT0FBTyxHQUFHLE1BQU07OztTQUdkLElBQUksS0FBS0EsUUFBTTs7Ozs7Ozs7Q0FVdkIsT0FBTzs7O1FBR0MsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSzs7RUFFaEMsS0FBSyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxPQUFPLFlBQVksS0FBSyxJQUNyRCxJQUFJLENBQUUsUUFBUTs7O09BR1QsSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJOztPQUVwQixJQUFJLENBQUMsSUFBSSxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVM7OztJQUcvQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLEtBQUssSUFDakMsSUFBSSxFQUFFLEdBQUc7O0lBRVgsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsR0FBRzs7O0lBRzFCLE9BQU8sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCOztJQUMvQixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxHQUFHOztLQUUzQixLQUFLLENBQUUsS0FBSztHQUNiLE9BQU8sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCO0dBQy9CLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
