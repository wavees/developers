import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, _ as create_slot, D as validate_store, E as component_subscribe, F as Cookie, H as onMount, v as validate_slots, I as goto, M as user, $ as get_slot_context, a0 as get_slot_changes, u as transition_in, w as transition_out } from './client.71a9cd32.js';
import { c as current } from './projects.77be37ef.js';

/* src/routes/panel/project/_layout.svelte generated by Svelte v3.22.2 */

function create_fragment(ctx) {
	let current;
	const default_slot_template = /*$$slots*/ ctx[3].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},
		l: function claim(nodes) {
			if (default_slot) default_slot.l(nodes);
		},
		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 4) {
					default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[2], null), get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null));
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $user;
	validate_store(user, "user");
	component_subscribe($$self, user, $$value => $$invalidate(0, $user = $$value));
	const cookies = Cookie();

	// onMount event
	onMount(() => {
		// Here we'll check if we have any users
		// logged in.
		if ($user.current.token == null) {
			// Now we must check if there are any
			// user accounts in current session.
			if ($user.current.tokens > 1) {
				// Redirect user to account chooser page
				goto("/chooser?return=settings");

				return;
			} else {
				// Redirect user to landing page.
				goto("/");

				return;
			}

			
		}

		// And now we need to check if there are any
		// appId cookies.
		let appId = cookies.get("_current_appId");

		if (appId == null) {
			// We need to redirect user to project
			// chooser page.
			goto("/panel/projects");
		} else {
			// And now, by the way, we need to load initial
			// project information.
			current.loadProject(appId);
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Layout> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Layout", $$slots, ['default']);

	$$self.$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(2, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		onMount,
		goto,
		user,
		current,
		Cookie,
		cookies,
		$user
	});

	return [$user, cookies, $$scope, $$slots];
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Layout",
			options,
			id: create_fragment.name
		});
	}
}

export default Layout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2xheW91dC43MGJmZWVmYS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9wYW5lbC9wcm9qZWN0L19sYXlvdXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbiAgLy8gaW1wb3J0XHJcbiAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gXCJzdmVsdGVcIjtcclxuICBpbXBvcnQgeyBnb3RvIH0gZnJvbSBcIkBzYXBwZXIvYXBwXCI7XHJcbiAgaW1wb3J0IHsgdXNlciB9IGZyb20gXCIuLi8uLi8uLi9jb25maWcvc3RvcmVzL3VzZXIuanNcIjtcclxuICBpbXBvcnQgeyBjdXJyZW50IH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZy9zdG9yZXMvcHJvamVjdHMuanNcIjtcclxuXHJcbiAgaW1wb3J0IENvb2tpZSBmcm9tIFwiY29va2llLXVuaXZlcnNhbFwiO1xyXG5cclxuICAvLyBDb29raWVzIG1hbmFnZXJcclxuICBjb25zdCBjb29raWVzID0gQ29va2llKCk7XHJcblxyXG4gIC8vIG9uTW91bnQgZXZlbnRcclxuICBvbk1vdW50KCgpID0+IHtcclxuICAgIC8vIEhlcmUgd2UnbGwgY2hlY2sgaWYgd2UgaGF2ZSBhbnkgdXNlcnNcclxuICAgIC8vIGxvZ2dlZCBpbi5cclxuICAgIGlmICgkdXNlci5jdXJyZW50LnRva2VuID09IG51bGwpIHtcclxuICAgICAgLy8gTm93IHdlIG11c3QgY2hlY2sgaWYgdGhlcmUgYXJlIGFueVxyXG4gICAgICAvLyB1c2VyIGFjY291bnRzIGluIGN1cnJlbnQgc2Vzc2lvbi5cclxuICAgICAgaWYgKCR1c2VyLmN1cnJlbnQudG9rZW5zID4gMSkge1xyXG4gICAgICAgIC8vIFJlZGlyZWN0IHVzZXIgdG8gYWNjb3VudCBjaG9vc2VyIHBhZ2VcclxuICAgICAgICBnb3RvKCcvY2hvb3Nlcj9yZXR1cm49c2V0dGluZ3MnKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gUmVkaXJlY3QgdXNlciB0byBsYW5kaW5nIHBhZ2UuXHJcbiAgICAgICAgZ290bygnLycpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBbmQgbm93IHdlIG5lZWQgdG8gY2hlY2sgaWYgdGhlcmUgYXJlIGFueVxyXG4gICAgLy8gYXBwSWQgY29va2llcy5cclxuICAgIGxldCBhcHBJZCA9IGNvb2tpZXMuZ2V0KCdfY3VycmVudF9hcHBJZCcpO1xyXG5cclxuICAgIGlmIChhcHBJZCA9PSBudWxsKSB7XHJcbiAgICAgIC8vIFdlIG5lZWQgdG8gcmVkaXJlY3QgdXNlciB0byBwcm9qZWN0XHJcbiAgICAgIC8vIGNob29zZXIgcGFnZS5cclxuICAgICAgZ290bygnL3BhbmVsL3Byb2plY3RzJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBBbmQgbm93LCBieSB0aGUgd2F5LCB3ZSBuZWVkIHRvIGxvYWQgaW5pdGlhbFxyXG4gICAgICAvLyBwcm9qZWN0IGluZm9ybWF0aW9uLlxyXG4gICAgICBjdXJyZW50LmxvYWRQcm9qZWN0KGFwcElkKTtcclxuICAgIH1cclxuICB9KTtcclxuPC9zY3JpcHQ+XHJcblxyXG48c2xvdD5cclxuPC9zbG90PiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FVUSxPQUFPLEdBQUcsTUFBTTs7O0NBR3RCLE9BQU87OztNQUdELEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLElBQUk7OztPQUd6QixLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDOztJQUUxQixJQUFJLENBQUMsMEJBQTBCOzs7OztJQUkvQixJQUFJLENBQUMsR0FBRzs7Ozs7Ozs7OztNQU9SLEtBQUssR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQjs7TUFFcEMsS0FBSyxJQUFJLElBQUk7OztHQUdmLElBQUksQ0FBQyxpQkFBaUI7Ozs7R0FJdEIsT0FBTyxDQUFDLFdBQVcsQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
