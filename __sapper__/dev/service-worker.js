(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1594752631544;

	const files = [
		"service-worker-index.html",
		"background/ideasBack.png",
		"fonts/Intro/intro.css",
		"fonts/Intro/intro.ttf",
		"fonts/Intro/intro.woff",
		"fonts/Intro/intro.woff2",
		"fonts/Junegull/junegull-regular.ttf",
		"fonts/Junegull/junegull-regular.woff",
		"fonts/Junegull/junegull-regular.woff2",
		"fonts/Junegull/junegull.css",
		"fonts/Neris/neris.css",
		"fonts/Neris/nerisblack.ttf",
		"fonts/Neris/nerisblack.woff",
		"fonts/Neris/nerisblack.woff2",
		"fonts/Neris/nerisblackitalic.ttf",
		"fonts/Neris/nerisblackitalic.woff",
		"fonts/Neris/nerisblackitalic.woff2",
		"fonts/Neris/nerisbolditalic.ttf",
		"fonts/Neris/nerisbolditalic.woff",
		"fonts/Neris/nerisbolditalic.woff2",
		"fonts/Neris/nerislight.ttf",
		"fonts/Neris/nerislight.woff",
		"fonts/Neris/nerislight.woff2",
		"fonts/Neris/nerislightitalic.ttf",
		"fonts/Neris/nerislightitalic.woff",
		"fonts/Neris/nerislightitalic.woff2",
		"fonts/Neris/nerissemibold.ttf",
		"fonts/Neris/nerissemibold.woff",
		"fonts/Neris/nerissemibold.woff2",
		"fonts/Neris/nerissemibolditalic.ttf",
		"fonts/Neris/nerissemibolditalic.woff",
		"fonts/Neris/nerissemibolditalic.woff2",
		"fonts/Neris/neristhin.ttf",
		"fonts/Neris/neristhin.woff",
		"fonts/Neris/neristhin.woff2",
		"fonts/Neris/neristhinitalic.ttf",
		"fonts/Neris/neristhinitalic.woff",
		"fonts/Neris/neristhinitalic.woff2",
		"icons/book-open.svg",
		"icons/box.svg",
		"icons/chevron-left.svg",
		"icons/file.svg",
		"icons/home.svg",
		"icons/layers.svg",
		"icons/monitor.svg",
		"icons/plus.svg",
		"icons/settings.svg",
		"icons/sliders.svg",
		"icons/smile.svg",
		"icons/terminal.svg",
		"icons/user.svg",
		"icons/users.svg",
		"illustrations/hiking_monochromatic.svg",
		"image.jpg",
		"manifest.json"
	];

	const shell = [
		"client/client.71a9cd32.js",
		"client/index.0878c78b.js",
		"client/authorization.7bd17ca8.js",
		"client/global.086fc0a6.js",
		"client/[token].26b94451.js",
		"client/index.24bc54cc.js",
		"client/marketplace.c406a74f.js",
		"client/UserDropdown.3644fef4.js",
		"client/projects.4cac30e0.js",
		"client/projects.77be37ef.js",
		"client/_layout.70bfeefa.js",
		"client/index.75f6d9aa.js",
		"client/ProjectHeader.ed8114a4.js",
		"client/index.d919b451.js",
		"client/index.f558e944.js",
		"client/configuration.d59c6988.js",
		"client/tutorial.18363c3d.js",
		"client/sapper-dev-client.89e34bae.js",
		"client/client.15b82349.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
